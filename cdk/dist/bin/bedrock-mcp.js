#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const bedrock_mcp_stack_1 = require("../lib/bedrock-mcp-stack");
const app = new cdk.App();
// Get qualifier from context or CDK_QUALIFIER env var (set by --qualifier)
const qualifier = app.node.tryGetContext('qualifier') || process.env.CDK_QUALIFIER;
// Require either --context qualifier or --qualifier
if (!qualifier) {
    throw new Error("Qualifier must be provided via --context qualifier=<value> or --qualifier=<value>");
}
// Environment configuration
const env = {
    account: process.env.CDK_DEFAULT_ACCOUNT,
    region: process.env.CDK_DEFAULT_REGION || 'us-east-1'
};
// Stack configuration
const stackProps = {
    env,
    description: 'Bedrock MCP Demo Stack',
    synthesizer: new cdk.DefaultStackSynthesizer({
        qualifier: qualifier,
        bootstrapStackVersionSsmParameter: `/cdk-bootstrap/${qualifier}/version`,
        fileAssetsBucketName: `cdk-${qualifier}-assets-${env.account}-${env.region}`
    })
};
// Create stack with qualifier
new bedrock_mcp_stack_1.BedrockMcpStack(app, `BedrockMcpStack-${qualifier}`, stackProps);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVkcm9jay1tY3AuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9iaW4vYmVkcm9jay1tY3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsdUNBQXFDO0FBQ3JDLG1DQUFtQztBQUNuQyxnRUFBMkQ7QUFFM0QsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7QUFFMUIsMkVBQTJFO0FBQzNFLE1BQU0sU0FBUyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDO0FBRW5GLG9EQUFvRDtBQUNwRCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDZixNQUFNLElBQUksS0FBSyxDQUFDLG1GQUFtRixDQUFDLENBQUM7QUFDdkcsQ0FBQztBQUVELDRCQUE0QjtBQUM1QixNQUFNLEdBQUcsR0FBRztJQUNWLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQjtJQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsSUFBSSxXQUFXO0NBQ3RELENBQUM7QUFFRixzQkFBc0I7QUFDdEIsTUFBTSxVQUFVLEdBQUc7SUFDakIsR0FBRztJQUNILFdBQVcsRUFBRSx3QkFBd0I7SUFDckMsV0FBVyxFQUFFLElBQUksR0FBRyxDQUFDLHVCQUF1QixDQUFDO1FBQzNDLFNBQVMsRUFBRSxTQUFTO1FBQ3BCLGlDQUFpQyxFQUFFLGtCQUFrQixTQUFTLFVBQVU7UUFDeEUsb0JBQW9CLEVBQUUsT0FBTyxTQUFTLFdBQVcsR0FBRyxDQUFDLE9BQU8sSUFBSSxHQUFHLENBQUMsTUFBTSxFQUFFO0tBQzdFLENBQUM7Q0FDSCxDQUFDO0FBRUYsOEJBQThCO0FBQzlCLElBQUksbUNBQWUsQ0FBQyxHQUFHLEVBQUUsbUJBQW1CLFNBQVMsRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiIyEvdXNyL2Jpbi9lbnYgbm9kZVxuaW1wb3J0ICdzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXInO1xuaW1wb3J0ICogYXMgY2RrIGZyb20gJ2F3cy1jZGstbGliJztcbmltcG9ydCB7IEJlZHJvY2tNY3BTdGFjayB9IGZyb20gJy4uL2xpYi9iZWRyb2NrLW1jcC1zdGFjayc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbi8vIEdldCBxdWFsaWZpZXIgZnJvbSBjb250ZXh0IG9yIENES19RVUFMSUZJRVIgZW52IHZhciAoc2V0IGJ5IC0tcXVhbGlmaWVyKVxuY29uc3QgcXVhbGlmaWVyID0gYXBwLm5vZGUudHJ5R2V0Q29udGV4dCgncXVhbGlmaWVyJykgfHwgcHJvY2Vzcy5lbnYuQ0RLX1FVQUxJRklFUjtcblxuLy8gUmVxdWlyZSBlaXRoZXIgLS1jb250ZXh0IHF1YWxpZmllciBvciAtLXF1YWxpZmllclxuaWYgKCFxdWFsaWZpZXIpIHtcbiAgdGhyb3cgbmV3IEVycm9yKFwiUXVhbGlmaWVyIG11c3QgYmUgcHJvdmlkZWQgdmlhIC0tY29udGV4dCBxdWFsaWZpZXI9PHZhbHVlPiBvciAtLXF1YWxpZmllcj08dmFsdWU+XCIpO1xufVxuXG4vLyBFbnZpcm9ubWVudCBjb25maWd1cmF0aW9uXG5jb25zdCBlbnYgPSB7IFxuICBhY2NvdW50OiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9BQ0NPVU5ULCBcbiAgcmVnaW9uOiBwcm9jZXNzLmVudi5DREtfREVGQVVMVF9SRUdJT04gfHwgJ3VzLWVhc3QtMSdcbn07XG5cbi8vIFN0YWNrIGNvbmZpZ3VyYXRpb25cbmNvbnN0IHN0YWNrUHJvcHMgPSB7XG4gIGVudixcbiAgZGVzY3JpcHRpb246ICdCZWRyb2NrIE1DUCBEZW1vIFN0YWNrJyxcbiAgc3ludGhlc2l6ZXI6IG5ldyBjZGsuRGVmYXVsdFN0YWNrU3ludGhlc2l6ZXIoe1xuICAgIHF1YWxpZmllcjogcXVhbGlmaWVyLFxuICAgIGJvb3RzdHJhcFN0YWNrVmVyc2lvblNzbVBhcmFtZXRlcjogYC9jZGstYm9vdHN0cmFwLyR7cXVhbGlmaWVyfS92ZXJzaW9uYCxcbiAgICBmaWxlQXNzZXRzQnVja2V0TmFtZTogYGNkay0ke3F1YWxpZmllcn0tYXNzZXRzLSR7ZW52LmFjY291bnR9LSR7ZW52LnJlZ2lvbn1gXG4gIH0pXG59O1xuXG4vLyBDcmVhdGUgc3RhY2sgd2l0aCBxdWFsaWZpZXJcbm5ldyBCZWRyb2NrTWNwU3RhY2soYXBwLCBgQmVkcm9ja01jcFN0YWNrLSR7cXVhbGlmaWVyfWAsIHN0YWNrUHJvcHMpO1xuIl19